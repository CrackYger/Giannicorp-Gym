name: Web & iOS build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  probe-ios:
    name: Probe iOS folder
    runs-on: ubuntu-latest
    outputs:
      has_ios: ${{ steps.check.outputs.has_ios }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check if ios/ exists
        id: check
        shell: bash
        run: |
          if [ -d "ios" ]; then
            echo "has_ios=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_ios=false" >> "$GITHUB_OUTPUT"
          fi

  web-build:
    name: Build Web (Vite-only) + diagnostics
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: --max-old-space-size=4096
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        shell: bash
        run: |
          if [ -f pnpm-lock.yaml ]; then
            pnpm install --frozen-lockfile
          elif [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Type check (non-blocking)
        continue-on-error: true
        shell: bash
        run: |
          if [ -f tsconfig.json ]; then
            npx tsc -p tsconfig.ci.json --noEmit > typecheck.txt 2>&1 || true
          fi

      - name: Build (skip tsc, vite only)
        shell: bash
        run: |
          if [ -f pnpm-lock.yaml ]; then
            pnpm exec vite build
          else
            npx vite build
          fi

      - name: Upload dist
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: dist
          if-no-files-found: error

      - name: Upload typecheck report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: typecheck-report
          path: typecheck.txt
          if-no-files-found: ignore

  ios-ipa:
    name: Build iOS IPA (if ios/ exists)
    needs: [probe-ios]
    if: ${{ needs.probe-ios.outputs.has_ios == 'true' }}
    runs-on: macos-latest
    env:
      NODE_OPTIONS: --max-old-space-size=4096
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        shell: bash
        run: |
          if [ -f pnpm-lock.yaml ]; then
            pnpm install --frozen-lockfile
          elif [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build web for iOS container (vite only)
        shell: bash
        run: |
          if [ -f pnpm-lock.yaml ]; then
            pnpm exec vite build
          else
            npx vite build
          fi

      - name: Sync Capacitor (optional)
        shell: bash
        run: |
          if [ -f node_modules/.bin/cap ]; then
            npx cap sync ios
          else
            echo "Capacitor CLI not found, skipping cap sync."
          fi

      - name: Build iOS (unsigned if possible)
        shell: bash
        run: |
          set -x
          if [ -d "ios/App" ] && [ -d "ios/App/App.xcworkspace" ]; then
            xcodebuild -workspace ios/App/App.xcworkspace -scheme App -configuration Release -sdk iphoneos -archivePath "$PWD/build/App.xcarchive" archive CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO || true
            xcodebuild -exportArchive -archivePath "$PWD/build/App.xcarchive" -exportPath "$PWD/build" -exportOptionsPlist ios/exportOptions.plist || true
          elif [ -d "ios" ]; then
            echo "Found ios/ but no standard Capacitor workspace. Skipping Xcode build."
          else
            echo "No ios/ folder present."
          fi

      - name: Upload IPA (if present)
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: |
            build/*.ipa
            build/**/*.ipa
          if-no-files-found: warn

  ios-skip-notice:
    name: Skip iOS (no ios/ folder)
    needs: [probe-ios]
    if: ${{ needs.probe-ios.outputs.has_ios != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "No ios/ folder found. Skipping iOS IPA build."
